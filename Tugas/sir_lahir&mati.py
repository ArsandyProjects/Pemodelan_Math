# -*- coding: utf-8 -*-
"""SIR_Lahir&Mati.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1uFEeJ1Nr99Fg94ikptA02P8Qwg2ukhjV
"""

import numpy as np                  # impor library
import matplotlib.pyplot as plt     # impor library
from scipy.integrate import odeint  # impor librari

# Parameter model
beta = 0.2   # Laju infeksi
gamma = 1/10  # Laju pemulihan (1/gamma = 10 hari)
alpha = 0.01  # Angka kelahiran
sigma = 0.005 # Angka kematian alami
N = 1000      # Total populasi awal

# Kondisi awal
S0 = N - 1  # Semua individu yang rentan kecuali 1 yang terinfeksi
I0 = 1      # Individu terinfeksi pada awalnya
R0 = 0      # Tidak ada yang sembuh pada awalnya

# Waktu simulasi (dalam hari)
t = np.linspace(0, 160, 160)

# Model SIR dengan kelahiran dan kematian alami
def sir_model(y, t, N, beta, gamma, alpha, sigma):
    S, I, R = y
    dSdt = alpha * N - beta * S * I / N - sigma * S
    dIdt = beta * S * I / N - gamma * I - sigma * I
    dRdt = gamma * I - sigma * R
    return [dSdt, dIdt, dRdt]

# Menyelesaikan sistem persamaan diferensial
y0 = [S0, I0, R0]
solution = odeint(sir_model, y0, t, args=(N, beta, gamma, alpha, sigma))
S, I, R = solution.T

# Plot hasil simulasi
plt.figure(figsize=(10,6))
plt.plot(t, S, label='Rentan (S)', color='blue')
plt.plot(t, I, label='Terinfeksi (I)', color='red')
plt.plot(t, R, label='Sembuh (R)', color='green')
plt.xlabel('Hari')
plt.ylabel('Jumlah Individu')
plt.title('Simulasi Model SIR dengan Kelahiran dan Kematian')
plt.legend()
plt.grid()
plt.show()