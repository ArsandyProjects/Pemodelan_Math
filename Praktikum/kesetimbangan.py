# -*- coding: utf-8 -*-
"""Kesetimbangan.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/13qtPE-btZQbvtgybjopuBGWJS1A-Z-ww

#ARSANDY JATI PRATAMA // 662023003

#Stream Plot of the System
"""

import numpy as np
import matplotlib.pyplot as plt

# Rentang nilai x dan waktu untuk medan vektor
x = np.arange(0,3,0.1) # rentang nilai dari 0-3 dengan selisih 0.1
t = np.arange(0,4,0.1) # rentang nilai dari 0-4 dengan selisih 0.1
T, X = np.meshgrid(t,x) #kombinasi dari t dan x

# Definisikan sistem
dX = -X**2 + 3*X - 2
dT = np.ones(dX.shape) # jadi 1 baris

# Plot Stream plot
plt.figure(figsize=(10,6)) # figure ukuran 10x6
plt.streamplot(T,X,dT,dX, color=dX, cmap='coolwarm', linewidth=1)

plt.title("Stream Plot of the System")
plt.xlabel("Time (t)")
plt.ylabel("x")
plt.axhline(0,color='gray',linestyle='--')
plt.colorbar(label='dx/dt')
plt.grid(True)
plt.show()

"""#Suhu Kopi

"""

#Parameter Konstanta
k = 0.1 # Konstanta Pendinginan
Ta = 25 # suhu lingkungan

# Definisi sistem persamaan diferensial
def system(T):
  return -k * (T-Ta)

# Membuat Grid untuk visiualisasi
t_vals = np.linspace(0,50,20) # rentang waktu
T_vals = np.linspace(0,50,20) # rentang suhu
t, T = np.meshgrid(t_vals, T_vals) # perbaikan urutan meshgrid

#menghitung vektor arah
U = np.ones_like(T) # arah horizontal tetap untuk menunjukan perubahan dalam waktu
V = system(T) #Arah vertikal mengikuti sistem persamaan differensial

# Plot medan vektor menggunakan streamplot
plt.figure(figsize=(7,5)) # figure ukuran 10x6
plt.streamplot(t,T,U,V, color='magenta')
plt.axhline(Ta,color='blue',linestyle='--',label='Solusi Setimbang (T=Ta)')
plt.title("Medan Vektor untuk Persamaan Diferensial Pendinginan Newton")
plt.xlabel("t (waktu)")
plt.ylabel("T (suhu)")
plt.legend
plt.grid()
plt.show()